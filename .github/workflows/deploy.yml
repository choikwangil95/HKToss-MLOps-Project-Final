name: Deploy to Public ECR and EC2

on:
  push:
    branches: [main]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: hktoss-mlops-final # ECR Î†àÌè¨ Ïù¥Î¶Ñ
  ECR_REGISTRY: public.ecr.aws/s7y4j6x4  # ÌçºÎ∏îÎ¶≠ ECR Í≤ΩÎ°ú

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build, tag, and push fastapi image to Amazon Public ECR
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f fastapi/Dockerfile fastapi/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p ${{ secrets.EC2_PROJECT_DIR }}
            cd ${{ secrets.EC2_PROJECT_DIR }}

            if [ ! -d ".git" ]; then
              echo "üì¶ Git Ï†ÄÏû•ÏÜå ÌÅ¥Î°† Ï§ë..."
              git init
              git remote add origin ${{ secrets.GIT_REPOSITORY_URL}}
            else
              echo "‚úÖ Pull latest code..."
              git fetch origin
              git reset --hard origin/main
              git pull origin main
            fi

            echo "üê≥ Re-deploying container..."
            docker-compose down
            docker-compose pull || true
            docker-compose up -d --build

            echo "üöÄ Deployment finished!"
